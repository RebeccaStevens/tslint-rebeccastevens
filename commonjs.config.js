/**
 * CommonJS Config.
 */
// @ts-check

const tsutilsTypeguardNode = [
  'isAccessorDeclaration',
  'isArrayBindingPattern',
  'isArrayLiteralExpression',
  'isArrayTypeNode',
  'isArrowFunction',
  'isAsExpression',
  'isAssertionExpression',
  'isAwaitExpression',
  'isBinaryExpression',
  'isBindingElement',
  'isBindingPattern',
  'isBlock',
  'isBlockLike',
  'isBreakOrContinueStatement',
  'isBreakStatement',
  'isCallExpression',
  'isCallLikeExpression',
  'isCallSignatureDeclaration',
  'isCaseBlock',
  'isCaseClause',
  'isCaseOrDefaultClause',
  'isCatchClause',
  'isClassDeclaration',
  'isClassExpression',
  'isClassLikeDeclaration',
  'isCommaListExpression',
  'isConditionalExpression',
  'isConditionalTypeNode',
  'isConstructorDeclaration',
  'isConstructorTypeNode',
  'isConstructSignatureDeclaration',
  'isContinueStatement',
  'isComputedPropertyName',
  'isDebuggerStatement',
  'isDecorator',
  'isDefaultClause',
  'isDeleteExpression',
  'isDoStatement',
  'isElementAccessExpression',
  'isEmptyStatement',
  'isEntityName',
  'isEntityNameExpression',
  'isEnumDeclaration',
  'isEnumMember',
  'isExportAssignment',
  'isExportDeclaration',
  'isExportSpecifier',
  'isExpression',
  'isExpressionStatement',
  'isExpressionWithTypeArguments',
  'isExternalModuleReference',
  'isForInStatement',
  'isForInOrOfStatement',
  'isForOfStatement',
  'isForStatement',
  'isFunctionDeclaration',
  'isFunctionExpression',
  'isFunctionTypeNode',
  'isGetAccessorDeclaration',
  'isIdentifier',
  'isIfStatement',
  'isImportClause',
  'isImportDeclaration',
  'isImportEqualsDeclaration',
  'isImportSpecifier',
  'isIndexedAccessTypeNode',
  'isIndexSignatureDeclaration',
  'isInferTypeNode',
  'isInterfaceDeclaration',
  'isIntersectionTypeNode',
  'isIterationStatement',
  'isJsDoc',
  'isJsxAttribute',
  'isJsxAttributeLike',
  'isJsxAttributes',
  'isJsxClosingElement',
  'isJsxClosingFragment',
  'isJsxElement',
  'isJsxExpression',
  'isJsxFragment',
  'isJsxOpeningElement',
  'isJsxOpeningFragment',
  'isJsxOpeningLikeElement',
  'isJsxSelfClosingElement',
  'isJsxSpreadAttribute',
  'isJsxText',
  'isLabeledStatement',
  'isLiteralExpression',
  'isLiteralTypeNode',
  'isMappedTypeNode',
  'isMetaProperty',
  'isMethodDeclaration',
  'isMethodSignature',
  'isModuleBlock',
  'isModuleDeclaration',
  'isNamedExports',
  'isNamedImports',
  'isNamespaceDeclaration',
  'isNamespaceImport',
  'isNamespaceExportDeclaration',
  'isNewExpression',
  'isNonNullExpression',
  'isNoSubstitutionTemplateLiteral',
  'isNumericLiteral',
  'isObjectBindingPattern',
  'isObjectLiteralExpression',
  'isOmittedExpression',
  'isParameterDeclaration',
  'isParenthesizedExpression',
  'isParenthesizedTypeNode',
  'isPostfixUnaryExpression',
  'isPrefixUnaryExpression',
  'isPropertyAccessExpression',
  'isPropertyAssignment',
  'isPropertyDeclaration',
  'isPropertySignature',
  'isQualifiedName',
  'isRegularExpressionLiteral',
  'isReturnStatement',
  'isSetAccessorDeclaration',
  'isShorthandPropertyAssignment',
  'isSignatureDeclaration',
  'isSourceFile',
  'isSpreadAssignment',
  'isSpreadElement',
  'isStringLiteral',
  'isSwitchStatement',
  'isSyntaxList',
  'isTaggedTemplateExpression',
  'isTemplateExpression',
  'isTemplateLiteral',
  'isTextualLiteral',
  'isThrowStatement',
  'isTryStatement',
  'isTupleTypeNode',
  'isTypeAliasDeclaration',
  'isTypeAssertion',
  'isTypeLiteralNode',
  'isTypeOfExpression',
  'isTypeOperatorNode',
  'isTypeParameterDeclaration',
  'isTypePredicateNode',
  'isTypeReferenceNode',
  'isTypeQueryNode',
  'isUnionTypeNode',
  'isVariableDeclaration',
  'isVariableStatement',
  'isVariableDeclarationList',
  'isVoidExpression',
  'isWhileStatement',
  'isWithStatement',
  'isImportTypeNode',
  'isOptionalTypeNode',
  'isRestTypeNode',
  'isSyntheticExpression'
];

const tsutilsTypeguardType = [
  'isConditionalType',
  'isEnumType',
  'isGenericType',
  'isIndexedAccessType',
  'isInstantiableType',
  'isInterfaceType',
  'isIntersectionType',
  'isLiteralType',
  'isObjectType',
  'isSubstitutionType',
  'isTypeParameter',
  'isTypeReference',
  'isTypeVariable',
  'isUnionOrIntersectionType',
  'isUnionType',
  'isUniqueESSymbolType',
  'isTupleType'
];


const tsutilsTypeguard = [
  ...tsutilsTypeguardNode,
  ...tsutilsTypeguardType
];

const tsutilsUtil = [
  'endsControlFlow',
  'getControlFlowEnd',
  'convertAst',
  'isEmptyObjectType',
  'removeOptionalityFromType',
  'isTypeAssignableToNumber',
  'isTypeAssignableToString',
  'getCallSignaturesOfType',
  'unionTypeParts',
  'isThenableType',
  'isFalsyType',
  'getUsageDomain',
  'getDeclarationDomain',
  'collectVariableUsage',
  'getChildOfKind',
  'isTokenKind',
  'isNodeKind',
  'isAssignmentKind',
  'isTypeNodeKind',
  'isJsDocKind',
  'isKeywordKind',
  'isThisParameter',
  'getModifier',
  'hasModifier',
  'isParameterProperty',
  'hasAccessModifier',
  'isObjectFlagSet',
  'isModifierFlagSet',
  'getPreviousStatement',
  'getNextStatement',
  'getPreviousToken',
  'getNextToken',
  'getTokenAtPosition',
  'getCommentAtPosition',
  'isPositionInComment',
  'commentText',
  'getWrappedNodeAtPosition',
  'getPropertyName',
  'forEachDestructuringIdentifier',
  'forEachDeclaredVariable',
  'getVariableDeclarationKind',
  'isBlockScopedVariableDeclarationList',
  'isBlockScopedVariableDeclaration',
  'isScopeBoundary',
  'isTypeScopeBoundary',
  'isFunctionScopeBoundary',
  'isBlockScopeBoundary',
  'hasOwnThisReference',
  'isFunctionWithBody',
  'forEachToken',
  'forEachTokenWithTrivia',
  'forEachComment',
  'getLineRanges',
  'getLineBreakStyle',
  'isValidIdentifier',
  'isValidPropertyAccess',
  'isValidPropertyName',
  'isValidNumericLiteral',
  'isValidJsxIdentifier',
  'isSameLine',
  'hasSideEffects',
  'getDeclarationOfBindingElement',
  'isExpressionValueUsed',
  'isReassignmentTarget',
  'canHaveJsDoc',
  'getJsDoc',
  'parseJsDocOfNode',
  'findImports',
  'findImportLikeNodes',
  'isStatementInAmbientContext',
  'isAmbientModuleBlock',
  'getIIFE',
  'isStrictCompilerOptionEnabled',
  'isCompilerOptionEnabled',
  'isNodeFlagSet',
  'isTypeFlagSet',
  'isSymbolFlagSet'
];

export default {
  include: ['node_modules/**'],
  namedExports: {
    'node_modules/tsutils/typeguard/3.0/index.js': tsutilsTypeguard,
    'node_modules/tsutils/typeguard/index.js': tsutilsTypeguard,
    'node_modules/tsutils/util/3.0/index.js': tsutilsUtil,
    'node_modules/tsutils/util/index.js': tsutilsUtil
  }
};
